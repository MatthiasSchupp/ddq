apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "example-ddq.fullname" . }}
  labels:
    {{- include "example-ddq.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "example-ddq.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "example-ddq.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgresql
          image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          command:
            - sh
            - -c
            - |
              until printf "." && nc -z -w 2 {{ include "example-ddq.postgresql.fullname" . }} {{ .Values.postgresql.service.port }}; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: QUARKUS_DATASOURCE_URL
              value: jdbc:postgresql://{{ include "example-ddq.postgresql.fullname" . }}/postgres
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "example-ddq.postgresql.fullname" . }}
                  key: postgresql-password
          livenessProbe:
            httpGet:
              path: /example/health/live
              port: http
          readinessProbe:
            httpGet:
              path: /example/health/ready
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
